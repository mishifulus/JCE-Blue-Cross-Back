// <auto-generated />
using System;
using JCEBlueCross.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JCEBlueCross.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240326052609_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JCEBlueCross.Models.Claim", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimId"));

                    b.Property<DateTime>("AccidentDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("AcuteManifestationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("AdmitingDiagnosisCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AssumedCareDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("AuthCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AuthorizedReturnWorkDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("AutoAccidentState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimPricingCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionInformationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CostMaterial")
                        .HasColumnType("float");

                    b.Property<double>("CostMedicine")
                        .HasColumnType("float");

                    b.Property<double>("CostService")
                        .HasColumnType("float");

                    b.Property<string>("DiagnosisRelatedCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DisabilityDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DischargeDate")
                        .HasColumnType("DATETIME");

                    b.Property<TimeSpan>("DischargeHour")
                        .HasColumnType("TIME");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("DATETIME");

                    b.Property<TimeSpan>("EntryHour")
                        .HasColumnType("TIME");

                    b.Property<string>("ExternalCausesCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileInf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HearingVisionPrescriptionDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("InitialTreatmentDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("InstitutionalClaimCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastMenstrualDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("LastSeenDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("LastWorkedDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("LastXRayDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("MedicalRecordNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberUserId")
                        .HasColumnType("int");

                    b.Property<string>("OccurrenceInformationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccurrenceSpamCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OnsetSymptomDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("OtherDiagnosisCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherProcedureCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientReasonCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayerClaimControlNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayorId")
                        .HasColumnType("int");

                    b.Property<string>("PrincipalDiagnosisCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrincipalProcedureCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionalClaimCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProviderCost")
                        .HasColumnType("float");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("ReferalNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RepricerReceivedDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("ServiceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<string>("TreatmentCodeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeBill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueInformationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimId");

                    b.HasIndex("MemberUserId");

                    b.HasIndex("PayorId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("JCEBlueCross.Models.Condition", b =>
                {
                    b.Property<int>("ConditionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConditionId"));

                    b.Property<int>("ConditionLabel")
                        .HasColumnType("int");

                    b.Property<int?>("ErrorId")
                        .HasColumnType("int");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ConditionId");

                    b.HasIndex("ErrorId");

                    b.ToTable("Condition");
                });

            modelBuilder.Entity("JCEBlueCross.Models.Error", b =>
                {
                    b.Property<int>("ErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ErrorId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RegisteringUserUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ErrorId");

                    b.HasIndex("RegisteringUserUserId");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("JCEBlueCross.Models.Payor", b =>
                {
                    b.Property<int>("PayorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayorId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PayorAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PayorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RegisteringUserUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("PayorId");

                    b.HasIndex("RegisteringUserUserId");

                    b.ToTable("Payor");
                });

            modelBuilder.Entity("JCEBlueCross.Models.PayorError", b =>
                {
                    b.Property<int>("PayorErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayorErrorId"));

                    b.Property<int>("ErrorId")
                        .HasColumnType("int");

                    b.Property<int>("PayorId")
                        .HasColumnType("int");

                    b.HasKey("PayorErrorId");

                    b.HasIndex("ErrorId");

                    b.HasIndex("PayorId");

                    b.ToTable("PayorError");
                });

            modelBuilder.Entity("JCEBlueCross.Models.Provider", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ProviderAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RegisteringUserUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("ProviderId");

                    b.HasIndex("RegisteringUserUserId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("JCEBlueCross.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("BandQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BossQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChilhoodQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CityQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MotherQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("SportQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubscribedDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("UniversityQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JCEBlueCross.Models.Claim", b =>
                {
                    b.HasOne("JCEBlueCross.Models.User", "Member")
                        .WithMany()
                        .HasForeignKey("MemberUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JCEBlueCross.Models.Payor", "Payor")
                        .WithMany()
                        .HasForeignKey("PayorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JCEBlueCross.Models.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Payor");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("JCEBlueCross.Models.Condition", b =>
                {
                    b.HasOne("JCEBlueCross.Models.Error", null)
                        .WithMany("Conditions")
                        .HasForeignKey("ErrorId");
                });

            modelBuilder.Entity("JCEBlueCross.Models.Error", b =>
                {
                    b.HasOne("JCEBlueCross.Models.User", "RegisteringUser")
                        .WithMany()
                        .HasForeignKey("RegisteringUserUserId");

                    b.Navigation("RegisteringUser");
                });

            modelBuilder.Entity("JCEBlueCross.Models.Payor", b =>
                {
                    b.HasOne("JCEBlueCross.Models.User", "RegisteringUser")
                        .WithMany()
                        .HasForeignKey("RegisteringUserUserId");

                    b.Navigation("RegisteringUser");
                });

            modelBuilder.Entity("JCEBlueCross.Models.PayorError", b =>
                {
                    b.HasOne("JCEBlueCross.Models.Error", "Error")
                        .WithMany("PayorErrors")
                        .HasForeignKey("ErrorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JCEBlueCross.Models.Payor", "Payor")
                        .WithMany("PayorErrors")
                        .HasForeignKey("PayorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Error");

                    b.Navigation("Payor");
                });

            modelBuilder.Entity("JCEBlueCross.Models.Provider", b =>
                {
                    b.HasOne("JCEBlueCross.Models.User", "RegisteringUser")
                        .WithMany()
                        .HasForeignKey("RegisteringUserUserId");

                    b.Navigation("RegisteringUser");
                });

            modelBuilder.Entity("JCEBlueCross.Models.Error", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("PayorErrors");
                });

            modelBuilder.Entity("JCEBlueCross.Models.Payor", b =>
                {
                    b.Navigation("PayorErrors");
                });
#pragma warning restore 612, 618
        }
    }
}
